[tool.poetry]
name = "serverless-fast-api"
version = "0.2.0"
description = ""
authors = ["Darren Weber <dweber.consulting@gmail.com>"]
license = "MIT"

include = ["example_app/**/*"]
exclude = ["tests/**/*"]

packages = [
    {include = "example_app"}
]


[tool.poetry.dependencies]
python = "~3.7.0"

fastapi = "^0.54.1"
mangum = "^0.8.0"

jwcrypto = "^0.8"
pydantic = {extras = ["dotenv"], version = "^1.6.1"}


[tool.poetry.dev-dependencies]

# requirements-dev.txt is used to manage and install
# development dependencies, to avoid excessive delays
# in 'poetry update' when it tries to resolve all version
# conflicts in the dependency tree, including dev-deps;
# this also helps to avoid excess conflicts between dev-deps
# and actual project dependencies.  It is not as reliable
# as using poetry to manage it all, so liberal use of
# 'pip check' is recommended.

# Use global installations for awscli and aws-sam-cli.
# Pin all the AWS SDK libs provided by AWS lambda
# - see also lambda/layer_builds.sh and note that
#   all these libs are removed from lambda layers
# - adding them here as dev-deps could force poetry
#   to constrain these versions when it tries to
#   resolve version compatibility for the app-deps;
#   without adding all these to the app-deps.
#
boto3 = '1.12.49'
botocore = '1.15.49'
docutils = '0.15.2'
jmespath = '0.9.5'
python_dateutil = '2.8.1'
s3transfer = '0.3.3'
six = '1.14.0'
urllib3 = '1.25.9'


[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
